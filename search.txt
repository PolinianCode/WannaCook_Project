from django.db.models import Q

@csrf_exempt
def api_search_recipes(request):
    try:
        if request.method == 'POST':
            data = json.loads(request.body)
            search_text = data.get('search_text', '')
            category_id = data.get('category_id', None)
            ingredients = data.get('ingredients', [])

            # Initial queryset with all recipes
            queryset = Recipes.objects.all()

            # Apply filters based on search_text, category_id, and ingredients
            if search_text:
                # Use Q objects to combine multiple conditions with OR
                queryset = queryset.filter(
                    Q(title__icontains=search_text) |
                    Q(description__icontains=search_text) |
                    Q(instruction__icontains=search_text)
                )

            if category_id:
                # Filter by category if category_id is provided
                queryset = queryset.filter(category__id=category_id)

            if ingredients:
                # Filter by ingredients using the related_name from the Recipes model
                queryset = queryset.filter(ingredients__name__in=ingredients)

            # Serialize the results
            serialized_recipes = serialize('json', queryset[:5])

            return JsonResponse({'search_results': serialized_recipes}, safe=False)

        else:
            return JsonResponse({'error': 'Request Error'}, status=400)

    except Exception as e:
        print(e)
        return JsonResponse({'error': 'Internal Server Error'}, status=500)
